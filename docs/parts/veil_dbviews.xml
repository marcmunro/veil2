<appendix>
  <title><literal>Veil2</literal> Views, Materialized Views and Caches</title>
  <para/>
  <mediaobject>
    <imageobject>
      <imagedata
	  id="veil2_views_div"
	  fileref="veil2_views.png"
	  format="PNG"/>
    </imageobject>
  </mediaobject>
  <sect1>
    <title>Veil2 Views</title>
    <para>
      Establishing whether an accessor has a given privilege in a
      given scope is a complex operation.  Privileges are assigned via
      roles, which may be assigned by other roles.  Furthermore the
      contexts in which those role assignments occur, and the context
      of the role to role mappings are largely user-defined.  To deal
      with both the complexity, and the need to allow
      user-customization, we determine an accessor's privileges through
      views.
    </para>
    <para>
      For performance reasons, some of these views are materialized.
      Where materialized views alone are not enough we use cache
      tables which are similar in nature to materialized views but:
      <itemizedlist>
	<listitem>
	  are implemented manually;
	</listitem>
	<listitem>
	  can be refreshed incrementally;
	</listitem>
	<listitem>
	  can be indexed.
	</listitem>
      </itemizedlist>
    </para>
    <para>
      The (clickable) diagram above shows the relationship of views
      with each other and with <literal>Veil2</literal>, and other,
      tables and functions.
    </para>
    <para>
      The bottom-most view in the diagram, <link
      linkend="view_session_privileges_v"><literal>session_privileges_v</literal></link>
      provides the data that determines an accessors privileges.  This
      view is used directly by the function <link
      linkend="func_load_and_cache_session_privs"><literal>load_and_cache_session_privs()</literal></link>
      to load the set of applicable roles and privileges, in all
      applicable contexts for an accessor's session.  The performance
      of this view is critical, and has been carefully developed and
      optimised.  Even so, <literal>Veil2</literal>'s session
      management functions will usually load this data from the <link
      linkend="entity_accessor_privileges_cache"><literal>accessor_privileges_cache</literal></link>
      table.
    </para>
    <para>
      A few of the views shown do not contribute to
      <literal>session_privileges_v</literal>.  These are developer
      views, aimed at providing data for development and debugging.
    </para>
    <sect2>
      <title>User-Supplied Views</title>
      <para>
	Although all of <literal>Veil2</literal>'s views
	<emphasis>may</emphasis> be replaced by user-supplied
	versions, the following views are expected to be so replaced.
	These views are expected to directly query user-provided
	tables which will be part of the set of data being protected
	by <literal>Veil2</literal>.
      </para>
      <sect3 id="view_accessor_contexts">
	<title>Accessor Contexts View</title>
        <?sql-definition view veil2.accessor_contexts sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_superior_scopes">
	<title>Superior Scopes View</title>
        <?sql-definition view veil2.superior_scopes sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_all_accessor_roles">
	<title>All Accessor Roles View</title>
        <?sql-definition view veil2.all_accessor_roles sql/veil2--&version_number;.sql ?>
      </sect3>
    </sect2>
    <sect2>
      <title>Developer Views</title>
      <para>
	These views do not directly contribute to
	<literal>Veil2</literal> functionality.  They exist to help
	developers in visuallizing and debugging data.
      </para>
      <sect3 id="view_privilege_assignments">
	<title>Privilege Assignments View</title>
        <?sql-definition view veil2.privilege_assignments sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_all_role_privileges_info">
        <title>All Role Privileges Info View</title>
        <?sql-definition view veil2.all_role_privileges_info sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_scope_tree">
	<title>Scope Tree View</title>
        <?sql-definition view veil2.scope_tree sql/veil2--&version_number;.sql ?>      </sect3>
      <sect3 id="view_promotable_privileges_info">
        <title>Promotable Privileges Info View</title>
        <?sql-definition view veil2.promotable_privileges_info sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_session_privileges_info">
        <title>Session Privileges Info View</title>
        <?sql-definition view veil2.session_privileges_info sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_role_chains">
	<title>Role Chains View</title>
        <?sql-definition view veil2.role_chains sql/veil2--&version_number;.sql ?>
      </sect3>
    </sect2>
    <sect2>
      <title><literal>Veil2</literal> Core Views</title>
      <para>
	These views are fundamental to the proper operation of
	<literal>Veil2</literal>.  You may provide your own versions
	of these views if needed, but you should be aware that future
	versions of <literal>Veil2</literal> may redefine and
	redevelop these views.  Although your user-supplied views will
	take precedence, you run the risk of missing important
	improvements to performance and functionality, and more
	importantly, if the view semantics change, you risk
	breaking assumptions made by the <literal>Veil2</literal>
	developers, which could have unforeseen consequences.
      </para>
      <para>
	That said, if you need to create a user-supplied version of
	one of these views, you are free to do so.  If so, you should
	carefully review any revisions to <literal>Veil2</literal>
	before applying the extension upgrade.  You are also advised
	to discuss your needs with the <literal>Veil2</literal>
	developers.  Contact links can be found <link
	linkend="contact">here</link>.
      </para>
      <sect3 id="view_all_role_roles">
	<title>All Role Roles View</title>
	<?sql-definition view veil2.all_role_roles sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_all_superior_scopes_v">
	<title>All Superior Scopes View</title>
        <?sql-definition view veil2.all_superior_scopes_v sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_all_accessor_roles_plus">
        <title>All Accessor Roles Plus View</title>
        <?sql-definition view veil2.all_accessor_roles_plus sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_all_role_privileges_v">
	<title>All Role Privileges View</title>
        <?sql-definition view veil2.all_role_privileges_v sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_session_assignment_contexts">
	<title>Session Assignment Contexts View</title>
	<?sql-definition view veil2.session_assignment_contexts sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_promotable_privileges">
	<title>Promotable Privileges View</title>
        <?sql-definition view veil2.promotable_privileges sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_session_privileges_v">
	<title>Session Privileges V View</title>
        <?sql-definition view veil2.session_privileges_v sql/veil2--&version_number;.sql ?>
      </sect3>
    </sect2>
    <sect2 id="caches">
      <title>Materialized Views and Caches</title>
      <para>
	Materized views and caches are used to improve query
	performance.  The trade-off for improved performance is that
	they need to be managed: whenever the data on which they
	depend is modified, they must be refreshed.
      </para>
      <sect3 id="view_all_superior_scopes">
        <title>All Superior Scopes Materialized View</title>
        <?sql-definition view veil2.all_superior_scopes sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_all_role_privileges">
        <title>All Role Privileges Materialized View</title>
        <?sql-definition view veil2.all_role_privileges sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="entity_accessor_privileges_cache">
        <title>Accessor Privileges Cache Table</title>
        <?sql-definition table veil2.accessor_privileges_cache sql/veil2--&version_number;.sql ?>
      </sect3>
    </sect2>
    <sect2 id="miscellaneous">
      <title>Miscellaneous Helper Views</title>
      <sect3 id="view_docs">
        <title>Docs View</title>
        <?sql-definition view veil2.docs sql/veil2--&version_number;.sql ?>
      </sect3>
      <sect3 id="view_sql_files">
        <title>SQL Files View</title>
        <?sql-definition view veil2.sql_files sql/veil2--&version_number;.sql ?>
      </sect3>
    </sect2>
  </sect1>
</appendix>
