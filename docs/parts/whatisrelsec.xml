<chapter id="what-is-relational-security">
  <title>What Is A Relational Security System?</title>
  <para>
    A Relational Security System is one in which your security model
    is part of your data model.  Access to each piece of data or
    functionality is limited according to the user's relationships to
    that data or functionality.  What this means is that access rights
    are contextual, based on relationships between that data and the
    connected user, and that each test for a specific access right is
    a test in a specific context.
  </para>
  <para>
    For example:
    <itemizedlist>
      <listitem>
	<para>
	  You have access to the company accounts only for the company
	  you work for.
	</para>
	<para>
	  Your access rights to company accounts data applies only in
	  the context of the company that employs you.  You would not
	  have access to company accounts for other companies.
	</para>
	<para>
	  We say that you have been given those access rights in
	  <literal>company-context</literal> for your company.
	</para>
      </listitem>
      <listitem>
	<para>
	  You have access to employee data only for employees of your
	  department.
	</para> 
	<para>
	  Your access to employee data applies only in the context of
	  your department.  You would not have access to employee data
	  for other departments.
	</para>
	<para>
	  We say you have been given those access rights in
	  <literal>department-context</literal> for your department.
	</para>
      </listitem>
      <listitem>
	<para>
	  You have access to see the postings of only your friends.
	</para>
	<para>
	  You have access to postings only in the contexts of posters
	  who are recorded as your friends.
	</para>
	<para>
	  We say that you have those access rights in
	  <literal>friend-context</literal> for each of your friends.
	</para>
      </listitem>
    </itemizedlist>
  </para>
  <para>
    Users acquire their access rights in various ways: all users may
    get a basic set of rights; some users may be members of teams or
    departments and their roles in those things may give them implied
    rights; and some users may be granted specific rights explicitly.
    Even with explicit assignments, those assignments may occur in
    different contexts giving the user access to greater or smaller
    subsets of data: you might be a given the manager role for a
    project, or for a department, or for a division, or company-wide.
  </para>
  <para>
    Contexts may be created from almost any definable subset of your
    data.  Mostly they are based on the relationships of your users
    with their data, though they need not be.  Typically, they are
    defined in terms of users and their relationships to specific
    artifacts described by your database.  For example, a person's
    relationship to the company they work for, or their membership of
    a department or project team.
  </para>
  <para>
    Having contexts associated with each assigned access right means
    that the granularity of access controls can be as coarse or as
    fine as the data demands, and it means that there is rarely the
    need for more complex access checks than "do I have privilege X in
    context Y?".
  </para>
  <para>
    Instead of having rights which imply conditional rule checks,
    such as the right to
    <emphasis>maintain-a-project-if-the-user-is-a-member-of-the-project-team</emphasis>,
    rights can effectively contain their conditionality through
    their context. 
  </para>
</chapter>
